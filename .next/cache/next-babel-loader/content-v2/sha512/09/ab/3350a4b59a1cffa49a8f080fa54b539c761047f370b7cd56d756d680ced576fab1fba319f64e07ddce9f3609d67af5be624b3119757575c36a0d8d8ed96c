{"ast":null,"code":"import axios from \"axios\";\nimport { getAllHistory } from \"./history\";\nexport const transferProcess = data => dispatch => {\n  return new Promise((resolve, reject) => {\n    const URLAPI = process.env.NEXT_PUBLIC_URL_API_WITH_SLASH;\n    axios.post(`${URLAPI}transferProcess/${data.from_id}`, data, {\n      withCredentials: true\n    }).then(res => {\n      dispatch(getAllHistory(data.from_id));\n      resolve(res);\n    }).catch(err => {\n      reject(err);\n    });\n  });\n};\nexport const transferSuccess = data => dispatch => {\n  return new Promise((resolve, reject) => {\n    const URLAPI = process.env.NEXT_PUBLIC_URL_API_WITH_SLASH;\n    axios.post(`${URLAPI}transferSuccess/${data.id}`, data, {\n      withCredentials: true\n    }).then(res => {\n      resolve(res);\n    }).catch(err => {\n      reject(new Error(err));\n    });\n  });\n};\nexport const getDataTarget = id => dispatch => {\n  const URLAPI = process.env.NEXT_PUBLIC_URL_API_WITH_SLASH;\n  axios.get(`${URLAPI}user/${id}`, {\n    withCredentials: true\n  }).then(res => {\n    dispatch({\n      type: \"GET_DATA_TARGET\",\n      payload: res.data.data,\n      message: res.data.message\n    });\n  }).catch(err => {\n    dispatch({\n      type: \"GET_DATA_TARGET\",\n      message: err.res.data.message\n    });\n  });\n};","map":{"version":3,"sources":["D:/Tutorial Web/Week 10/Zwallet-Frontend/configs/redux/actions/transfer.js"],"names":["axios","getAllHistory","transferProcess","data","dispatch","Promise","resolve","reject","URLAPI","process","env","NEXT_PUBLIC_URL_API_WITH_SLASH","post","from_id","withCredentials","then","res","catch","err","transferSuccess","id","Error","getDataTarget","get","type","payload","message"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,WAA9B;AACA,OAAO,MAAMC,eAAe,GAAIC,IAAD,IAAWC,QAAD,IAAc;AACrD,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,UAAMC,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,8BAA3B;AACAX,IAAAA,KAAK,CACFY,IADH,CACS,GAAEJ,MAAO,mBAAkBL,IAAI,CAACU,OAAQ,EADjD,EACoDV,IADpD,EAC0D;AACtDW,MAAAA,eAAe,EAAE;AADqC,KAD1D,EAIGC,IAJH,CAISC,GAAD,IAAS;AACbZ,MAAAA,QAAQ,CAACH,aAAa,CAACE,IAAI,CAACU,OAAN,CAAd,CAAR;AACAP,MAAAA,OAAO,CAACU,GAAD,CAAP;AACD,KAPH,EAQGC,KARH,CAQUC,GAAD,IAAS;AACdX,MAAAA,MAAM,CAACW,GAAD,CAAN;AACD,KAVH;AAWD,GAbM,CAAP;AAcD,CAfM;AAiBP,OAAO,MAAMC,eAAe,GAAIhB,IAAD,IAAWC,QAAD,IAAc;AACrD,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,UAAMC,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,8BAA3B;AACAX,IAAAA,KAAK,CACFY,IADH,CACS,GAAEJ,MAAO,mBAAkBL,IAAI,CAACiB,EAAG,EAD5C,EAC+CjB,IAD/C,EACqD;AACjDW,MAAAA,eAAe,EAAE;AADgC,KADrD,EAIGC,IAJH,CAISC,GAAD,IAAS;AACbV,MAAAA,OAAO,CAACU,GAAD,CAAP;AACD,KANH,EAOGC,KAPH,CAOUC,GAAD,IAAS;AACdX,MAAAA,MAAM,CAAC,IAAIc,KAAJ,CAAUH,GAAV,CAAD,CAAN;AACD,KATH;AAUD,GAZM,CAAP;AAaD,CAdM;AAgBP,OAAO,MAAMI,aAAa,GAAIF,EAAD,IAAShB,QAAD,IAAc;AACjD,QAAMI,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,8BAA3B;AACAX,EAAAA,KAAK,CACFuB,GADH,CACQ,GAAEf,MAAO,QAAOY,EAAG,EAD3B,EAC8B;AAC1BN,IAAAA,eAAe,EAAE;AADS,GAD9B,EAIGC,IAJH,CAISC,GAAD,IAAS;AACbZ,IAAAA,QAAQ,CAAC;AACPoB,MAAAA,IAAI,EAAE,iBADC;AAEPC,MAAAA,OAAO,EAAET,GAAG,CAACb,IAAJ,CAASA,IAFX;AAGPuB,MAAAA,OAAO,EAAEV,GAAG,CAACb,IAAJ,CAASuB;AAHX,KAAD,CAAR;AAKD,GAVH,EAWGT,KAXH,CAWUC,GAAD,IAAS;AACdd,IAAAA,QAAQ,CAAC;AAAEoB,MAAAA,IAAI,EAAE,iBAAR;AAA2BE,MAAAA,OAAO,EAAER,GAAG,CAACF,GAAJ,CAAQb,IAAR,CAAauB;AAAjD,KAAD,CAAR;AACD,GAbH;AAcD,CAhBM","sourcesContent":["import axios from \"axios\";\r\nimport { getAllHistory } from \"./history\";\r\nexport const transferProcess = (data) => (dispatch) => {\r\n  return new Promise((resolve, reject) => {\r\n    const URLAPI = process.env.NEXT_PUBLIC_URL_API_WITH_SLASH;\r\n    axios\r\n      .post(`${URLAPI}transferProcess/${data.from_id}`, data, {\r\n        withCredentials: true,\r\n      })\r\n      .then((res) => {\r\n        dispatch(getAllHistory(data.from_id));\r\n        resolve(res);\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n      });\r\n  });\r\n};\r\n\r\nexport const transferSuccess = (data) => (dispatch) => {\r\n  return new Promise((resolve, reject) => {\r\n    const URLAPI = process.env.NEXT_PUBLIC_URL_API_WITH_SLASH;\r\n    axios\r\n      .post(`${URLAPI}transferSuccess/${data.id}`, data, {\r\n        withCredentials: true,\r\n      })\r\n      .then((res) => {\r\n        resolve(res);\r\n      })\r\n      .catch((err) => {\r\n        reject(new Error(err));\r\n      });\r\n  });\r\n};\r\n\r\nexport const getDataTarget = (id) => (dispatch) => {\r\n  const URLAPI = process.env.NEXT_PUBLIC_URL_API_WITH_SLASH;\r\n  axios\r\n    .get(`${URLAPI}user/${id}`, {\r\n      withCredentials: true,\r\n    })\r\n    .then((res) => {\r\n      dispatch({\r\n        type: \"GET_DATA_TARGET\",\r\n        payload: res.data.data,\r\n        message: res.data.message,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      dispatch({ type: \"GET_DATA_TARGET\", message: err.res.data.message });\r\n    });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}