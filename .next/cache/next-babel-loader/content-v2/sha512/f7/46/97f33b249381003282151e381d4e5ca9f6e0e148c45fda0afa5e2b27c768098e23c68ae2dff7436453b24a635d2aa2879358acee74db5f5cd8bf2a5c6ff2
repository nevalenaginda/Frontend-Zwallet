{"ast":null,"code":"import axios from \"axios\";\nlet idUser;\n\nif (false) {\n  idUser = localStorage.getItem(\"id\");\n}\n\nexport const getAllHistory = (id, limit = 3, sort = \"desc\") => dispatch => {\n  return new Promise((resolve, reject) => {\n    const URLAPI = process.env.NEXT_PUBLIC_URL_API_WITH_SLASH;\n    dispatch({\n      type: \"REQUEST_ALL_HISTORY\"\n    });\n    axios.get(`${URLAPI}history/${id}?limit=${limit}&sort=${sort}`, {\n      withCredentials: true\n    }).then(res => {\n      dispatch({\n        type: \"REQUEST_ALL_HISTORY_SUCCESS\",\n        payload: res.data,\n        message: res.data.message\n      });\n      resolve(res);\n    }).catch(err => {\n      dispatch({\n        type: \"REQUEST_ALL_HISTORY_FAILURE\",\n        message: err.response.data.message\n      });\n      reject(err);\n    });\n  });\n};\nexport const getAllNotifications = idUser => dispatch => {\n  return new Promise((resolve, reject) => {\n    const URLAPI = process.env.NEXT_PUBLIC_URL_API_WITH_SLASH;\n    dispatch({\n      type: \"REQUEST_ALL_NOTIFICATIONS\"\n    });\n    axios.get(`${URLAPI}notifications/${idUser}`, {\n      withCredentials: true\n    }).then(res => {\n      if (res.data.code !== 404) {\n        dispatch({\n          type: \"REQUEST_ALL_NOTIFICATIONS_SUCCESS\",\n          payload: res.data.pagination.totalData,\n          message: res.data.message\n        });\n      } else {\n        dispatch({\n          type: \"REQUEST_ALL_NOTIFICATIONS_FAILURE\",\n          message: err.response.data.message,\n          payload: 0\n        });\n      }\n\n      resolve(res);\n    }).catch(err => {\n      dispatch({\n        type: \"REQUEST_ALL_NOTIFICATIONS_FAILURE\",\n        message: err.response.data.message,\n        payload: 0\n      });\n      reject(err);\n    });\n  });\n};\nexport const getDetailHistory = id => dispatch => {\n  return new Promise((resolve, reject) => {\n    const URLAPI = process.env.NEXT_PUBLIC_URL_API_WITH_SLASH;\n    axios.get(`${URLAPI}detailHistory/${id}`, {\n      withCredentials: true\n    }).then(res => {\n      dispatch(getAllNotifications(idUser));\n      resolve(res);\n    }).catch(err => {\n      reject(err);\n    });\n  });\n};","map":null,"metadata":{},"sourceType":"module"}