{"ast":null,"code":"import axios from \"axios\";\nvar idUser;\n\nif (true) {\n  idUser = localStorage.getItem(\"id\");\n}\n\nexport var getAllHistory = function getAllHistory(id) {\n  var limit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 3;\n  var sort = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"desc\";\n  return function (dispatch) {\n    return new Promise(function (resolve, reject) {\n      var URLAPI = process.env.NEXT_PUBLIC_URL_API_WITH_SLASH;\n      dispatch({\n        type: \"REQUEST_ALL_HISTORY\"\n      });\n      axios.get(\"\".concat(URLAPI, \"history/\").concat(id, \"?limit=\").concat(limit, \"&sort=\").concat(sort), {\n        withCredentials: true\n      }).then(function (res) {\n        dispatch({\n          type: \"REQUEST_ALL_HISTORY_SUCCESS\",\n          payload: res.data,\n          message: res.data.message\n        });\n        resolve(res);\n      })[\"catch\"](function (err) {\n        dispatch({\n          type: \"REQUEST_ALL_HISTORY_FAILURE\",\n          message: err.response.data.message\n        });\n        reject(err);\n      });\n    });\n  };\n};\nexport var getAllNotifications = function getAllNotifications(idUser) {\n  return function (dispatch) {\n    return new Promise(function (resolve, reject) {\n      var URLAPI = process.env.NEXT_PUBLIC_URL_API_WITH_SLASH;\n      dispatch({\n        type: \"REQUEST_ALL_NOTIFICATIONS\"\n      });\n      axios.get(\"\".concat(URLAPI, \"notifications/\").concat(idUser), {\n        withCredentials: true\n      }).then(function (res) {\n        if (res.data.code !== 404) {\n          dispatch({\n            type: \"REQUEST_ALL_NOTIFICATIONS_SUCCESS\",\n            payload: res.data.pagination.totalData,\n            message: res.data.message\n          });\n        } else {\n          dispatch({\n            type: \"REQUEST_ALL_NOTIFICATIONS_FAILURE\",\n            message: err.response.data.message,\n            payload: 0\n          });\n        }\n\n        resolve(res);\n      })[\"catch\"](function (err) {\n        dispatch({\n          type: \"REQUEST_ALL_NOTIFICATIONS_FAILURE\",\n          message: err.response.data.message,\n          payload: 0\n        });\n        reject(err);\n      });\n    });\n  };\n};\nexport var getDetailHistory = function getDetailHistory(id) {\n  return function (dispatch) {\n    return new Promise(function (resolve, reject) {\n      var URLAPI = process.env.NEXT_PUBLIC_URL_API_WITH_SLASH;\n      axios.get(\"\".concat(URLAPI, \"detailHistory/\").concat(id), {\n        withCredentials: true\n      }).then(function (res) {\n        dispatch(getAllNotifications(idUser));\n        resolve(res);\n      })[\"catch\"](function (err) {\n        reject(err);\n      });\n    });\n  };\n};","map":{"version":3,"sources":["D:/Tutorial Web/Week 10/Zwallet-Frontend/configs/redux/actions/history.js"],"names":["axios","idUser","localStorage","getItem","getAllHistory","id","limit","sort","dispatch","Promise","resolve","reject","URLAPI","process","env","NEXT_PUBLIC_URL_API_WITH_SLASH","type","get","withCredentials","then","res","payload","data","message","err","response","getAllNotifications","code","pagination","totalData","getDetailHistory"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\n\r\nlet idUser;\r\nif (process.browser) {\r\n  idUser = localStorage.getItem(\"id\");\r\n}\r\n\r\nexport const getAllHistory = (id, limit = 3, sort = \"desc\") => (dispatch) => {\r\n  return new Promise((resolve, reject) => {\r\n    const URLAPI = process.env.NEXT_PUBLIC_URL_API_WITH_SLASH;\r\n    dispatch({\r\n      type: \"REQUEST_ALL_HISTORY\",\r\n    });\r\n    axios\r\n      .get(`${URLAPI}history/${id}?limit=${limit}&sort=${sort}`, {\r\n        withCredentials: true,\r\n      })\r\n      .then((res) => {\r\n        dispatch({\r\n          type: \"REQUEST_ALL_HISTORY_SUCCESS\",\r\n          payload: res.data,\r\n          message: res.data.message,\r\n        });\r\n        resolve(res);\r\n      })\r\n      .catch((err) => {\r\n        dispatch({\r\n          type: \"REQUEST_ALL_HISTORY_FAILURE\",\r\n          message: err.response.data.message,\r\n        });\r\n        reject(err);\r\n      });\r\n  });\r\n};\r\n\r\nexport const getAllNotifications = (idUser) => (dispatch) => {\r\n  return new Promise((resolve, reject) => {\r\n    const URLAPI = process.env.NEXT_PUBLIC_URL_API_WITH_SLASH;\r\n    dispatch({\r\n      type: \"REQUEST_ALL_NOTIFICATIONS\",\r\n    });\r\n    axios\r\n      .get(`${URLAPI}notifications/${idUser}`, {\r\n        withCredentials: true,\r\n      })\r\n      .then((res) => {\r\n        if (res.data.code !== 404) {\r\n          dispatch({\r\n            type: \"REQUEST_ALL_NOTIFICATIONS_SUCCESS\",\r\n            payload: res.data.pagination.totalData,\r\n            message: res.data.message,\r\n          });\r\n        } else {\r\n          dispatch({\r\n            type: \"REQUEST_ALL_NOTIFICATIONS_FAILURE\",\r\n            message: err.response.data.message,\r\n            payload: 0,\r\n          });\r\n        }\r\n\r\n        resolve(res);\r\n      })\r\n      .catch((err) => {\r\n        dispatch({\r\n          type: \"REQUEST_ALL_NOTIFICATIONS_FAILURE\",\r\n          message: err.response.data.message,\r\n          payload: 0,\r\n        });\r\n        reject(err);\r\n      });\r\n  });\r\n};\r\n\r\nexport const getDetailHistory = (id) => (dispatch) => {\r\n  return new Promise((resolve, reject) => {\r\n    const URLAPI = process.env.NEXT_PUBLIC_URL_API_WITH_SLASH;\r\n    axios\r\n      .get(`${URLAPI}detailHistory/${id}`, {\r\n        withCredentials: true,\r\n      })\r\n      .then((res) => {\r\n        dispatch(getAllNotifications(idUser));\r\n        resolve(res);\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n      });\r\n  });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}