{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst initialState = {\n  transfer: {},\n  dataTarget: {},\n  loading: false,\n  message: \"\",\n  status: \"success\"\n};\n\nconst transferReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"INSERT_DATA_TRANSFER\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: action.payload\n      });\n\n    case \"TRANSFER_REQUEST\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: true\n      });\n\n    case \"TRANSFER_SUCCESS\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: false,\n        status: \"success\"\n      });\n\n    case \"TRANSFER_FAILURE\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: false,\n        message: action.payload,\n        status: \"failed\"\n      });\n\n    case \"GET_DATA_TARGET\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        dataTarget: action.payload,\n        message: action.message\n      });\n\n    case \"GET_DATA_TARGET\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        message: action.message\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default transferReducer;","map":null,"metadata":{},"sourceType":"module"}