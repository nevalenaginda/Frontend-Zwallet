{"ast":null,"code":"import axios from \"axios\";\nimport { getAllHistory } from \"./history\";\nexport const transferProcess = data => dispatch => {\n  return new Promise((resolve, reject) => {\n    const URLAPI = process.env.NEXT_PUBLIC_URL_API_WITH_SLASH;\n    axios.post(`${URLAPI}transferProcess/${data.from_id}`, data, {\n      withCredentials: true\n    }).then(res => {\n      dispatch(getAllHistory(data.from_id));\n      resolve(res);\n    }).catch(err => {\n      reject(err);\n    });\n  });\n};\nexport const transferSuccess = data => dispatch => {\n  return new Promise((resolve, reject) => {\n    const URLAPI = process.env.NEXT_PUBLIC_URL_API_WITH_SLASH;\n    axios.post(`${URLAPI}transferSuccess/${data.id}`, data, {\n      withCredentials: true\n    }).then(res => {\n      resolve(res);\n    }).catch(err => {\n      reject(new Error(err));\n    });\n  });\n};\nexport const getDataTarget = id => dispatch => {\n  const URLAPI = process.env.NEXT_PUBLIC_URL_API_WITH_SLASH;\n  axios.get(`${URLAPI}user/${id}`, {\n    withCredentials: true\n  }).then(res => {\n    dispatch({\n      type: \"GET_DATA_TARGET\",\n      payload: res.data.data,\n      message: res.data.message\n    });\n  }).catch(err => {\n    dispatch({\n      type: \"GET_DATA_TARGET\",\n      message: err.res.data.message\n    });\n  });\n};","map":null,"metadata":{},"sourceType":"module"}